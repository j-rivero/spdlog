# Adapted from various sources, including:
# - Louis Dionne's Hana: https://github.com/ldionne/hana
# - Paul Fultz II's FIT: https://github.com/pfultz2/Fit
# - Eric Niebler's range-v3: https://github.com/ericniebler/range-v3
sudo: required
language: cpp

addons: &gcc7
  apt:
    packages:
      - g++-7
      - lcov
    sources:
      - ubuntu-toolchain-r-test

matrix:
  include:
    - env: GCC_VERSION=7 BUILD_TYPE=Release CPP=11
      os: linux
      addons: *gcc7


before_script:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CXX="clang++" CC="clang"; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - cmake --version

script:
  - cd ${TRAVIS_BUILD_DIR}
  - export CXXFLAGS="-g -O0 --coverage"
  - export LDFLAGS="--coverage"
  - mkdir -p build && cd build
  - |
    cmake .. \
      --warn-uninitialized \
      -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
      -DCMAKE_CXX_STANDARD=$CPP \
      -DSPDLOG_BUILD_EXAMPLES=ON \
      -DSPDLOG_BUILD_BENCH=OFF \
      -DSPDLOG_BUILD_TESTS=ON \
      -DSPDLOG_SANITIZE_ADDRESS=$ASAN \
      -DSPDLOG_SANITIZE_THREAD=$TSAN
  - make VERBOSE=1 -j2
  - ctest -j2 --output-on-failure

ter_script:
  # Create lcov report
  - lcov --capture --initial --directory .. -o app_base.info
  - lcov --capture --rc lcov_branch_coverage=0 --directory . --output-file coverage.info
  - lcov --remove app_base.info */tests/* */example/* --output-file app_base.info
  - lcov --remove coverage.info */tests/* */example/* --output-file coverage.info
  - lcov -a app_base.info -a coverage.info -o coverage.info
  - lcov --list coverage.info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

notifications:
  email: false
